spring:
  hazelcast:
    config: classpath:hazelcastConfig.yml

kafka:
  security-protocol: PLAINTEXT
  bootstrap-servers: ${KAFKA_BROKER_URL}
  ssl:
    key-store-location: file://location-to-keystore-file
    key-password: '{cipher}password'
    trust-store-location: file://location-to-truststore-file
    trust-store-password: '{cipher}password'
    protocol: TLSv1.2
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
  consumer:
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

eureka:
  client:
    enabled: true
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka
  instance:
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 2
    metadata-map:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
    prefer-ip-address: true
    secure-port-enabled: false
    non-secure-port-enabled: true


logging:
  level:
    com.rahim.common: DEBUG

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true
  zipkin:
    base-url: http://zipkin.default.svc.cluster.local:9411
    enabled: true
    sender:
      type: web
    encoder:
      type: json
    properties:
      compression:
        enabled: true
    connection:
      timeout: 5s
      read-timeout: 10s
    reporter:
      message-max-bytes: 524288
      queued-max-spans: 1000
      queued-max-bytes: 10485760

springdoc:
  swagger-ui:
    path: /swagger-ui.html
