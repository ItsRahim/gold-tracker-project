on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    types: [opened, synchronize, reopened]

name: Main Workflow
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - account-service
          - batch-service
          - config-server
          - custom-api
          - database
          - devops
          - email-service
          - gateway-service
          - notification-service
          - pricing-service
          - scheduler-service
          - service-registry

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Start SonarQube Docker container
      run: docker run -d --name sonarqube -p 9000:9000 sonarqube

    - name: Wait for SonarQube to start
      run: |
        echo "Waiting for SonarQube to start..."
        while ! curl -s http://localhost:9000/api/system/status | grep '"status":"UP"'; do sleep 5; done
        echo "SonarQube is up and running!"

    - name: SonarQube Scan
      env:
        SONAR_PASSWORD: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd ${{ matrix.project }}
        mvn sonar:sonar \
          -Dsonar.projectKey=${{ matrix.project }} \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.login=admin \
          -Dsonar.password=$SONAR_PASSWORD

    # Cleanup steps
    - name: Stop SonarQube Docker container
      run: docker stop sonarqube
      if: always()

    - name: Remove SonarQube Docker container
      run: docker rm sonarqube
      if: always()
