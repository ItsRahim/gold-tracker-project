apiVersion: v1
kind: ConfigMap
metadata:
  name: rgts-config-server-configmap
data:
  bootstrap.yaml: |
    server:
      port: 8888
    
    spring:
      application:
        name: config-server
      profiles:
        active: native
      config:
        import: classpath:/config/vault-config.yaml
      cloud:
        config:
          server:
            native:
              search-locations: classpath:/config
              
    application-service.yaml: |
      spring:
        jpa:
          database: postgresql
          show-sql: false
        datasource:
          url: ${db-url}
          username: ${db-username}
          password: ${db-password}
        kafka:
          bootstrap-servers: localhost:9092
      
      management:
        endpoints:
          web:
            exposure:
              include: env, health

    account-service.yaml: |
      server:
        port: 8081
      
      eureka:
        client:
          service-url:
            defaultZone: http://localhost:8761/eureka
      
      management:
        tracing:
          sampling:
            probability: 1.0
      
      spring:
        output:
          ansi:
            enabled: always
      
      logging:
        level:
          root: WARN
          com:
            rahim:
              accountservice: INFO
          org:
            springframework: ERROR
        pattern:
          console: "%d{yyyy-MM-dd HH:mm:ss} %-5level - %msg%n"
          file: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n"
        file:
          name: logs/account-service.log
        color:
          enabled: true

    batch-service.yaml: |
      server:
        port: 8086
      
      spring:
        datasource:
          default-schema: batch_schema
      
      eureka:
        client:
          service-url:
            defaultZone: http://localhost:8761/eureka
      
      management:
        tracing:
          sampling:
            probability: 1.0
      
      processing:
        chunk-size: 500
      
    email-service.yaml: |
      server:
        port: 8083
      
      eureka:
        client:
          service-url:
            defaultZone: http://localhost:8761/eureka
      
      management:
        tracing:
          sampling:
            probability: 1.0
      
      spring:
        mail:
          host: smtp.gmail.com
          port: 587
          username: ${email-address}
          password: ${email-password}
          properties:
            mail:
              smtp:
                auth: true
                starttls:
                  enable: true
      
    kafka-topics.yaml: |
      topics:
        add-gold-type: pricing-service-new-type
        delete-gold-type: pricing-service-delete-type
        send-notification-price: notification-service-price-update
        update-price-history: pricing-service-history-table
        update-gold-price-job: pricing-service-update-prices
        custom-api-data: gold-price-stream
        send-email-topic: email-service-send-email
        scheduler-user-cleanup : user-service-cleanup-accounts
        scheduler-update-price : pricing-service-update-prices
        scheduler-update-price-history : pricing-service-history-table
        check-user-id : user-service-check-id
        send-id-result : notification-service-id-result
      
    notification-service.yaml: |
      server:
        port: 8085
      
      eureka:
        client:
          service-url:
            defaultZone: http://localhost:8761/eureka
      
      management:
        tracing:
          sampling:
            probability: 1.0
      
    pricing-service.yaml: |
      server:
        port: 8084
      
      eureka:
        client:
          service-url:
            defaultZone: http://localhost:8761/eureka
      
      gold-price-api:
        url: http://localhost:8000/api/v1/gold/uk-investing
    
    scheduler-service.yaml: |
      server:
        port: 8082
      
      eureka:
        client:
          service-url:
            defaultZone: http://localhost:8761/eureka
      
      management:
        tracing:
          sampling:
            probability: 1.0
      
    vault-config.yaml: |
      spring:
        cloud:
          vault:
            enabled: true
            # Update value with Vault Pod's service host
            uri: http://my-vault.vault:8200
            kv:
              enabled: true
              application-name: config-server
              backend: kv
            authentication: kubernetes
            kubernetes:
              # Update with name of role created - bound to namespace which app is deployed
              # Add policy to role created
              role: rgts-vault
      #      ssl:
      #        key-store: file://{location}
      #        key-store-password: password
      #        trust-store: file://{location}
      #        trust-store-password: password