version: '3.8'

services:
  vault:
    image: hashicorp/vault
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev_token"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DISABLE_MLOCK: "true"
      VAULT_TLS_DISABLE: "true"
    restart: unless-stopped
    networks:
      - my-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gold
    ports:
      - "5432:5432"
    entrypoint: [ "/usr/local/bin/docker-entrypoint.sh", "postgres" ]
    networks:
      - my-network
    
  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - my-network

  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - my-network
      
  hazelcast:
    image: hazelcast/hazelcast:latest
    container_name: hazelcast
    ports:
      - "5701:5701"
    environment:
      HZ_CLUSTERNAME: dev
    networks:
      - my-network

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - my-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - my-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - my-network

# Microservices

# Python Pricing Service
  pricing-api:
    image: rahim/pricingapi
    build: .
    container_name: pricing-service
    ports:
      - "8000:8000"
    depends_on:
      - vault
      - postgres
    environment:
      - DB_NAME=gold
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=Vny+H/dXlFBwKCRbGCAyP/b7ZqM8SAWb+sGhLftCbw4=
      - DB_PASSWORD=cdmak3vJcvdu8c5OdldjBabaNgpnHqfL4HLCXbyHSj0=
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=gold-price-stream
      - VAULT_URL=http://vault:8200
      - VAULT_TOKEN=dev_token
      - VAULT_BACKEND_PATH=kv/my-app
    networks:
      - my-network
networks:
  my-network:
    driver: bridge
    
volumes:
  vault_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
